<!--
  파일명: resetPassword.ejs
  목적: 비밀번호 재설정 페이지
  기능:
  - 새 비밀번호 입력
  - 비밀번호 확인 입력
  - 토큰 유효성 검사
  - 비밀번호 강도 검사
  - 재설정 완료 후 로그인 연결
  - 반응형 폼 디자인
-->
<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>비밀번호 재설정</title>
  <!-- Bootstrap CSS CDN -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background: linear-gradient(135deg, #f8fafc 0%, #e2eafc 100%);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .reset-card {
      max-width: 450px;
      width: 100%;
      margin: auto;
      box-shadow: 0 4px 24px rgba(0,0,0,0.08);
      border-radius: 16px;
      padding: 2.5rem 2rem 2rem 2rem;
      background: #fff;
    }
    .reset-title {
      font-weight: 700;
      margin-bottom: 1.5rem;
      text-align: center;
      color: #2d3a4b;
    }
    .form-label {
      font-weight: 500;
    }
    .btn-primary {
      width: 100%;
      font-weight: 600;
      letter-spacing: 1px;
    }
    .reset-links {
      margin-top: 1.2rem;
      text-align: center;
    }
    .reset-links a {
      color: #4f8cff;
      text-decoration: none;
      margin: 0 0.5rem;
    }
    .reset-links a:hover {
      text-decoration: underline;
    }
    .alert {
      border-radius: 8px;
      margin-bottom: 1rem;
    }
    .loading {
      display: none;
    }
    .spinner-border-sm {
      width: 1rem;
      height: 1rem;
    }
    .password-requirements {
      font-size: 0.875rem;
      color: #6c757d;
      margin-top: 0.5rem;
    }
    .requirement {
      margin-bottom: 0.25rem;
    }
    .requirement.valid {
      color: #198754;
    }
    .requirement.invalid {
      color: #dc3545;
    }
  </style>
</head>
<body>
  <div class="reset-card">
    <h2 class="reset-title">비밀번호 재설정</h2>
    
    <% if (error) { %>
      <div class="alert alert-danger">
        <i class="bi bi-exclamation-triangle"></i>
        <%= error %>
      </div>
      <div class="reset-links">
        <a href="/auth/login">로그인으로 돌아가기</a>
      </div>
    <% } else { %>
      <div id="alert-container"></div>
      
      <form id="resetForm">
        <div class="mb-3">
          <label for="password" class="form-label">새 비밀번호</label>
          <input type="password" class="form-control" id="password" name="password" required autocomplete="new-password">
          <div class="password-requirements">
            <div class="requirement" id="length">• 6자리 이상</div>
            <div class="requirement" id="uppercase">• 대문자 포함</div>
            <div class="requirement" id="lowercase">• 소문자 포함</div>
            <div class="requirement" id="number">• 숫자 포함</div>
            <div class="requirement" id="special">• 특수문자 포함</div>
          </div>
        </div>
        
        <div class="mb-3">
          <label for="confirmPassword" class="form-label">새 비밀번호 확인</label>
          <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required autocomplete="new-password">
        </div>
        
        <button type="submit" class="btn btn-primary" id="submitBtn">
          <span class="btn-text">비밀번호 변경</span>
          <span class="loading">
            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
            처리 중...
          </span>
        </button>
      </form>
      
      <div class="reset-links">
        <a href="/auth/login">로그인으로 돌아가기</a>
      </div>
    <% } %>
  </div>

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  
  <script>
    // 비밀번호 유효성 검사
    function validatePassword(password) {
      const requirements = {
        length: password.length >= 6,
        uppercase: /[A-Z]/.test(password),
        lowercase: /[a-z]/.test(password),
        number: /[0-9]/.test(password),
        special: /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(password)
      };
      
      // UI 업데이트
      Object.keys(requirements).forEach(req => {
        const element = document.getElementById(req);
        if (element) {
          element.classList.toggle('valid', requirements[req]);
          element.classList.toggle('invalid', !requirements[req]);
        }
      });
      
      return Object.values(requirements).every(req => req);
    }
    
    // 비밀번호 입력 이벤트
    document.getElementById('password')?.addEventListener('input', function() {
      validatePassword(this.value);
    });
    
    // 폼 제출 이벤트
    document.getElementById('resetForm')?.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const password = document.getElementById('password').value;
      const confirmPassword = document.getElementById('confirmPassword').value;
      const submitBtn = document.getElementById('submitBtn');
      const btnText = submitBtn.querySelector('.btn-text');
      const loading = submitBtn.querySelector('.loading');
      const alertContainer = document.getElementById('alert-container');
      
      // 비밀번호 확인
      if (password !== confirmPassword) {
        alertContainer.innerHTML = `
          <div class="alert alert-danger">
            <i class="bi bi-exclamation-triangle"></i>
            비밀번호가 일치하지 않습니다.
          </div>
        `;
        return;
      }
      
      // 비밀번호 유효성 검사
      if (!validatePassword(password)) {
        alertContainer.innerHTML = `
          <div class="alert alert-danger">
            <i class="bi bi-exclamation-triangle"></i>
            비밀번호가 모든 요구사항을 충족하지 않습니다.
          </div>
        `;
        return;
      }
      
      // 로딩 상태 표시
      btnText.style.display = 'none';
      loading.style.display = 'inline-block';
      submitBtn.disabled = true;
      
      // 기존 알림 제거
      alertContainer.innerHTML = '';
      
      try {
        const token = '<%= token %>';
        const response = await fetch(`/auth/reset/${token}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ password, confirmPassword })
        });
        
        const result = await response.json();
        
        if (result.success) {
          alertContainer.innerHTML = `
            <div class="alert alert-success">
              <i class="bi bi-check-circle"></i>
              ${result.message}
            </div>
          `;
          
          // 3초 후 로그인 페이지로 이동
          setTimeout(() => {
            window.location.href = '/auth/login';
          }, 3000);
        } else {
          alertContainer.innerHTML = `
            <div class="alert alert-danger">
              <i class="bi bi-exclamation-triangle"></i>
              ${result.message}
            </div>
          `;
        }
      } catch (error) {
        alertContainer.innerHTML = `
          <div class="alert alert-danger">
            <i class="bi bi-exclamation-triangle"></i>
            서버 오류가 발생했습니다. 잠시 후 다시 시도해주세요.
          </div>
        `;
      } finally {
        // 로딩 상태 해제
        btnText.style.display = 'inline-block';
        loading.style.display = 'none';
        submitBtn.disabled = false;
      }
    });
  </script>
</body>
</html> 