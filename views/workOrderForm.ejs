<%- include('header') %>

    <style>
        body {
            font-family: 'Malgun Gothic', sans-serif;
            font-size: 14px;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .form-section {
            margin-bottom: 30px;
            border: 1px solid #ddd;
            border-radius: 5px;
            overflow: hidden;
        }
        
        .section-header {
            background-color: #f8f9fa;
            padding: 8px 15px;
            font-weight: bold;
            font-size: 14px;
            border-bottom: none;
        }
        
        .section-content {
            padding: 20px;
        }
        
        .form-row {
            display: flex;
            margin-bottom: 15px;
            align-items: center;
        }
        
        .form-group {
            margin-right: 20px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            font-size: 12px;
        }
        
        .form-control {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 12px;
        }
        
        .work-assignment-table {
            width: 100%;
            border-collapse: collapse;
            border: 1px solid #333;
            font-size: 12px;
        }
        
        .work-assignment-table th,
        .work-assignment-table td {
            border: 1px solid #333;
            padding: 8px;
            text-align: center;
            vertical-align: middle;
        }
        
        .work-assignment-table th {
            background-color: #f0f0f0;
            font-weight: bold;
        }
        
        .work-assignment-table .region-col {
            background-color: #e9ecef;
            font-weight: bold;
            width: 10%;
        }
        
        .work-assignment-table .location-col {
            background-color: #e9ecef;
            font-weight: bold;
            text-align: left;
            padding-left: 12px;
            width: 15%;
        }
        
        .work-assignment-table .personnel-col {
            width: 16.67%;
        }
        
        .work-assignment-table .personnel-col input {
            width: 100%;
            border: none;
            padding: 4px;
            text-align: center;
            font-size: 12px;
        }
        
        /* 새로운 근무편성 좌우 대칭 스타일 */
        .assignment-container {
            display: flex;
            gap: 20px;
            width: 100%;
        }
        
        .assignment-left, .assignment-right {
            flex: 1;
        }
        
        .assignment-left table, .assignment-right table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 0;
            table-layout: fixed;
        }
        
        .assignment-left th, .assignment-right th {
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
            padding: 8px;
            text-align: center;
            font-weight: bold;
            height: 40px;
        }
        
        .assignment-left td, .assignment-right td {
            border: 1px solid #dee2e6;
            padding: 4px;
            vertical-align: middle;
            height: 40px;
        }
        
        .assignment-left .region-col, .assignment-right .region-col {
            width: 15%;
            text-align: center;
            font-weight: bold;
            background-color: #e9ecef;
        }
        
        .assignment-left .location-col, .assignment-right .location-col {
            width: 20%;
            text-align: center;
            vertical-align: middle;
            font-weight: bold;
            background-color: #f8f9fa;
        }
        
        .assignment-left .personnel-col, .assignment-right .personnel-col {
            width: 65%;
            text-align: center;
        }
        
        .assignment-left .personnel-col input, .assignment-right .personnel-col input {
            width: 80px !important;
            border: 2px solid #007bff !important;
            padding: 6px !important;
            text-align: center !important;
            font-size: 12px !important;
            margin: 3px !important;
            display: inline-block !important;
            vertical-align: middle !important;
            background-color: white !important;
            min-height: 30px !important;
            height: 30px !important;
            box-sizing: border-box !important;
            visibility: visible !important;
            opacity: 1 !important;
            position: relative !important;
            z-index: 10 !important;
        }
        
        /* 모든 input 필드 강제 표시 */
        input[type="text"] {
            display: inline-block !important;
            visibility: visible !important;
            opacity: 1 !important;
            background-color: white !important;
            border: 2px solid #007bff !important;
            width: 80px !important;
            height: 30px !important;
            padding: 6px !important;
            margin: 3px !important;
        }
        
        .assignment-left .personnel-col, .assignment-right .personnel-col {
            white-space: nowrap;
            text-align: center;
            padding: 8px;
        }
        
        .assignment-left .personnel-col label, .assignment-right .personnel-col label {
            font-weight: bold !important;
            margin-right: 8px !important;
            color: #007bff !important;
            font-size: 14px !important;
            display: inline-block !important;
        }
        
        .assignment-left .personnel-col input:focus, .assignment-right .personnel-col input:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
        }
        
        /* 좌우 행 정렬을 위한 추가 스타일 */
        .assignment-container {
            display: flex;
            gap: 20px;
            align-items: flex-start;
        }
        
        .assignment-left, .assignment-right {
            flex: 1;
            min-height: 600px;
        }
        
        .assignment-left table tbody tr, .assignment-right table tbody tr {
            height: 40px;
        }
        
        /* 통합된 보안근무지 스타일 */
        .assignment-left .location-col[rowspan], .assignment-right .location-col[rowspan] {
            border-left: none !important;
            background-color: #f8f9fa !important;
            font-weight: bold !important;
            vertical-align: middle !important;
            text-align: center !important;
        }
        
        /* 통합된 보안근무지와 인접한 편성 컬럼의 왼쪽 테두리 제거 */
        .assignment-left .location-col[rowspan] + .personnel-col, 
        .assignment-right .location-col[rowspan] + .personnel-col {
            border-left: none !important;
        }
        
        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            margin-right: 10px;
        }
        
        .btn-primary {
            background-color: #007bff;
            color: white;
        }
        
        .btn-secondary {
            background-color: #6c757d;
            color: white;
        }
        
        /* 미리보기 모달 스타일 */
        .preview-container {
            font-family: 'Malgun Gothic', sans-serif;
        }
        
        .preview-container .card {
            border: 1px solid #dee2e6;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .preview-container .card-header {
            font-weight: bold;
            padding: 0.75rem 1rem;
        }
        
        .preview-container .card-body {
            padding: 1rem;
        }
        
        .preview-container .table {
            margin-bottom: 0;
        }
        
        .preview-container .table th {
            background-color: #f8f9fa;
            font-weight: bold;
            border-color: #dee2e6;
        }
        
        .preview-container .table td {
            border-color: #dee2e6;
            vertical-align: middle;
        }
        
        .preview-container ul {
            margin-bottom: 0;
            padding-left: 1.5rem;
        }
        
        .preview-container li {
            margin-bottom: 0.25rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>근무명령서 작성</h1>
        
        <form action="/work-orders" method="POST">
            <!-- 오늘의 근무 형태 -->
            <div class="form-section">
                <div class="section-header">□ 오늘의 근무 형태</div>
                <div class="section-content">
                    <div class="row" id="todayScheduleContainer">
                        <!-- JavaScript로 동적 생성 -->
                    </div>
            </div>
        </div>

            <!-- 근무 정보 -->
            <div class="form-section">
                <div class="section-header">□ 근무 정보</div>
                <div class="section-content">
                    <div class="form-row">
                        <div class="form-group">
                            <label>근무 날짜</label>
                            <input type="date" name="workInfo[date]" class="form-control" id="workDate" required>
                        </div>
                        <div class="form-group">
                            <label>근무반</label>
                            <select name="workInfo[team]" class="form-control" id="workTeam" required>
                                <option value="">선택하세요</option>
                                <option value="보안1반">보안1반</option>
                                <option value="보안2반">보안2반</option>
                                <option value="보안3반">보안3반</option>
                            </select>
                        </div>
                        <div class="form-group" style="flex: 2; min-width: 450px;">
                            <label>근무시간</label>
                            <input type="text" name="workInfo[workTime.display]" class="form-control" id="workTime" placeholder="근무반을 선택하면 자동으로 입력됩니다" readonly style="width: 100%; min-width: 400px; font-size: 14px;">
                            <input type="hidden" name="workInfo[workTime.start]" id="workTimeStart">
                            <input type="hidden" name="workInfo[workTime.end]" id="workTimeEnd">
                            <input type="hidden" name="workInfo[shift]" id="workShift">
                        </div>
                    </div>
                </div>
            </div>

            <!-- 인원 현황 -->
            <div class="form-section">
                <div class="section-header">□ 인원 현황</div>
                <div class="section-content">
                    <div class="form-row">
                        <div class="form-group">
                            <label>총원</label>
                            <input type="number" name="personnelStatus[totalPersonnel]" class="form-control" id="totalPersonnel" required>
                        </div>
                        <div class="form-group">
                            <label>결원 수</label>
                            <input type="number" name="personnelStatus[absentPersonnel]" class="form-control" id="absentPersonnel" value="0">
                        </div>
                        <div class="form-group">
                            <label>현재원</label>
                            <input type="number" name="personnelStatus[currentPersonnel]" class="form-control" id="currentPersonnel" required>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group" style="width: 100%;">
                            <label>사고내용</label>
                            <div style="margin-bottom: 10px;">
                                <button type="button" class="btn btn-secondary" onclick="addAccidentItem()" style="font-size: 12px; padding: 5px 10px;">사고 항목 추가</button>
                                </div>
                            <div id="accidentItems">
                                <!-- 사고 항목들이 여기에 동적으로 추가됩니다 -->
                        </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- 근무 편성 -->
            <div class="form-section">
                <div class="section-header">□ 근무 편성</div>
                <div class="section-content">
                    <div class="assignment-container">
                        <!-- 왼쪽 영역 (해안지역) -->
                        <div class="assignment-left">
                            <table class="work-assignment-table">
                        <thead>
                            <tr>
                                        <th class="region-col">지역</th>
                                        <th class="location-col">보안근무지</th>
                                        <th class="personnel-col">편성</th>
                            </tr>
                        </thead>
                        <tbody>
                                    <!-- 해안입문 (반장+조장, 대원3명) -->
                                    <tr>
                                        <td rowspan="12" class="region-col">해안지역</td>
                                        <td rowspan="2" class="location-col">해안입문</td>
                                        <td class="personnel-col">
                                            <div style="display: flex; gap: 10px; align-items: center; flex-wrap: wrap;">
                                                <div><label>반장:</label><input type="text" name="workAssignment[해안입문].assignment.teamLeader" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '해안입문', 'teamLeader') : '' %>" style="width: 80px;"></div>
                                                <div><label>조장:</label><input type="text" name="workAssignment[해안입문].assignment.supervisor" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '해안입문', 'supervisor') : '' %>" style="width: 80px;"></div>
                                            </div>
                                            <input type="hidden" name="workAssignment[해안입문].region" value="해안지역">
                                            <input type="hidden" name="workAssignment[해안입문].location" value="해안입문">
                                </td>
                                    </tr>
                                    <tr>
                                        <td class="personnel-col">
                                            <div style="display: flex; gap: 5px; flex-wrap: wrap;">
                                                <input type="text" name="workAssignment[해안입문].assignment.members[0]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '해안입문', 'members', 0) : '' %>" style="width: 80px;">
                                                <input type="text" name="workAssignment[해안입문].assignment.members[1]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '해안입문', 'members', 1) : '' %>" style="width: 80px;">
                                                <input type="text" name="workAssignment[해안입문].assignment.members[2]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '해안입문', 'members', 2) : '' %>" style="width: 80px;">
                                            </div>
                                </td>
                                    </tr>
                            
                                    <!-- 해안출문 (대원3명) -->
                                    <tr>
                                        <td class="location-col">해안출문</td>
                                        <td class="personnel-col">
                                            <div style="display: flex; gap: 5px; flex-wrap: wrap;">
                                                <input type="text" name="workAssignment[해안출문].assignment.members[0]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '해안출문', 'members', 0) : '' %>" style="width: 80px;">
                                                <input type="text" name="workAssignment[해안출문].assignment.members[1]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '해안출문', 'members', 1) : '' %>" style="width: 80px;">
                                                <input type="text" name="workAssignment[해안출문].assignment.members[2]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '해안출문', 'members', 2) : '' %>" style="width: 80px;">
                                            </div>
                                            <input type="hidden" name="workAssignment[해안출문].region" value="해안지역">
                                            <input type="hidden" name="workAssignment[해안출문].location" value="해안출문">
                                            <input type="hidden" name="workAssignment[해안출문].assignment.teamLeader" value="">
                                            <input type="hidden" name="workAssignment[해안출문].assignment.supervisor" value="">
                                </td>
                            </tr>
                            
                                    <!-- 기술교육원문 (조장, 대원2명) -->
                                    <tr>
                                        <td rowspan="2" class="location-col">기술교육원문</td>
                                        <td class="personnel-col">
                                            <input type="hidden" name="workAssignment[기술교육원문].region" value="해안지역">
                                            <input type="hidden" name="workAssignment[기술교육원문].location" value="기술교육원문">
                                            <input type="hidden" name="workAssignment[기술교육원문].assignment.teamLeader" value="">
                                            <label>조장:</label><input type="text" name="workAssignment[기술교육원문].assignment.supervisor" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '기술교육원문', 'supervisor') : '' %>">
                                </td>
                                    </tr>
                                    <tr>
                                        <td class="personnel-col">
                                            <div style="display: flex; gap: 5px; flex-wrap: wrap;">
                                                <input type="text" name="workAssignment[기술교육원문].assignment.members[0]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '기술교육원문', 'members', 0) : '' %>" style="width: 80px;">
                                                <input type="text" name="workAssignment[기술교육원문].assignment.members[1]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '기술교육원문', 'members', 1) : '' %>" style="width: 80px;">
                                            </div>
                                </td>
                            </tr>
                            
                                    <!-- 교육원중문 (대원1명) -->
                                    <tr>
                                        <td class="location-col">교육원중문</td>
                                        <td class="personnel-col">
                                            <div style="display: flex; gap: 5px; flex-wrap: wrap;">
                                                <input type="text" name="workAssignment[교육원중문].assignment.members[0]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '교육원중문', 'members', 0) : '' %>" style="width: 80px;">
                                            </div>
                                            <input type="hidden" name="workAssignment[교육원중문].region" value="해안지역">
                                            <input type="hidden" name="workAssignment[교육원중문].location" value="교육원중문">
                                            <input type="hidden" name="workAssignment[교육원중문].assignment.teamLeader" value="">
                                            <input type="hidden" name="workAssignment[교육원중문].assignment.supervisor" value="">
                                </td>
                            </tr>
                            
                                    <!-- 성내주차장문 (대원1명) -->
                                    <tr>
                                        <td class="location-col">성내주차장문</td>
                                        <td class="personnel-col">
                                            <div style="display: flex; gap: 5px; flex-wrap: wrap;">
                                                <input type="text" name="workAssignment[성내주차장문].assignment.members[0]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '성내주차장문', 'members', 0) : '' %>" style="width: 80px;">
                                            </div>
                                            <input type="hidden" name="workAssignment[성내주차장문].region" value="해안지역">
                                            <input type="hidden" name="workAssignment[성내주차장문].location" value="성내주차장문">
                                            <input type="hidden" name="workAssignment[성내주차장문].assignment.teamLeader" value="">
                                            <input type="hidden" name="workAssignment[성내주차장문].assignment.supervisor" value="">
                                </td>
                            </tr>
                            
                                    <!-- 성내주차장초소 (대원1명) -->
                                    <tr>
                                        <td class="location-col">성내주차장초소</td>
                                        <td class="personnel-col">
                                            <div style="display: flex; gap: 5px; flex-wrap: wrap;">
                                                <input type="text" name="workAssignment[성내주차장초소].assignment.members[0]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '성내주차장초소', 'members', 0) : '' %>" style="width: 80px;">
                                            </div>
                                            <input type="hidden" name="workAssignment[성내주차장초소].region" value="해안지역">
                                            <input type="hidden" name="workAssignment[성내주차장초소].location" value="성내주차장초소">
                                            <input type="hidden" name="workAssignment[성내주차장초소].assignment.teamLeader" value="">
                                            <input type="hidden" name="workAssignment[성내주차장초소].assignment.supervisor" value="">
                                </td>
                            </tr>
                            
                                    <!-- 선적중문 (대원2명) -->
                                    <tr>
                                        <td class="location-col">선적중문</td>
                                        <td class="personnel-col">
                                            <div style="display: flex; gap: 5px; flex-wrap: wrap;">
                                                <input type="text" name="workAssignment[선적중문].assignment.members[0]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '선적중문', 'members', 0) : '' %>" style="width: 80px;">
                                                <input type="text" name="workAssignment[선적중문].assignment.members[1]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '선적중문', 'members', 1) : '' %>" style="width: 80px;">
                                            </div>
                                            <input type="hidden" name="workAssignment[선적중문].region" value="해안지역">
                                            <input type="hidden" name="workAssignment[선적중문].location" value="선적중문">
                                            <input type="hidden" name="workAssignment[선적중문].assignment.teamLeader" value="">
                                            <input type="hidden" name="workAssignment[선적중문].assignment.supervisor" value="">
                                </td>
                            </tr>
                            
                                    <!-- 5의장중문 (대원2명) -->
                                    <tr>
                                        <td class="location-col">5의장중문</td>
                                        <td class="personnel-col">
                                            <div style="display: flex; gap: 5px; flex-wrap: wrap;">
                                                <input type="text" name="workAssignment[5의장중문].assignment.members[0]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '5의장중문', 'members', 0) : '' %>" style="width: 80px;">
                                                <input type="text" name="workAssignment[5의장중문].assignment.members[1]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '5의장중문', 'members', 1) : '' %>" style="width: 80px;">
                                            </div>
                                            <input type="hidden" name="workAssignment[5의장중문].region" value="해안지역">
                                            <input type="hidden" name="workAssignment[5의장중문].location" value="5의장중문">
                                            <input type="hidden" name="workAssignment[5의장중문].assignment.teamLeader" value="">
                                            <input type="hidden" name="workAssignment[5의장중문].assignment.supervisor" value="">
                                </td>
                            </tr>
                            
                                    <!-- 아산로중문 (대원2명) -->
                                    <tr>
                                        <td class="location-col">아산로중문</td>
                                        <td class="personnel-col">
                                            <div style="display: flex; gap: 5px; flex-wrap: wrap;">
                                                <input type="text" name="workAssignment[아산로중문].assignment.members[0]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '아산로중문', 'members', 0) : '' %>" style="width: 80px;">
                                                <input type="text" name="workAssignment[아산로중문].assignment.members[1]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '아산로중문', 'members', 1) : '' %>" style="width: 80px;">
                                            </div>
                                            <input type="hidden" name="workAssignment[아산로중문].region" value="해안지역">
                                            <input type="hidden" name="workAssignment[아산로중문].location" value="아산로중문">
                                            <input type="hidden" name="workAssignment[아산로중문].assignment.teamLeader" value="">
                                            <input type="hidden" name="workAssignment[아산로중문].assignment.supervisor" value="">
                                </td>
                            </tr>
                            
                                    <!-- 항만순찰 (대원4명, 2행) -->
                                    <tr>
                                        <td rowspan="2" class="location-col">항만순찰</td>
                                        <td class="personnel-col">
                                            <div style="display: flex; gap: 5px; flex-wrap: wrap;">
                                                <input type="text" name="workAssignment[항만순찰].assignment.members[0]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '항만순찰', 'members', 0) : '' %>" style="width: 80px;">
                                                <input type="text" name="workAssignment[항만순찰].assignment.members[1]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '항만순찰', 'members', 1) : '' %>" style="width: 80px;">
                                            </div>
                                            <input type="hidden" name="workAssignment[항만순찰].region" value="해안지역">
                                            <input type="hidden" name="workAssignment[항만순찰].location" value="항만순찰">
                                            <input type="hidden" name="workAssignment[항만순찰].assignment.teamLeader" value="">
                                            <input type="hidden" name="workAssignment[항만순찰].assignment.supervisor" value="">
                                </td>
                            </tr>
                            <tr>
                                        <td class="personnel-col">
                                            <div style="display: flex; gap: 5px; flex-wrap: wrap;">
                                                <input type="text" name="workAssignment[항만순찰].assignment.members[2]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '항만순찰', 'members', 2) : '' %>" style="width: 80px;">
                                                <input type="text" name="workAssignment[항만순찰].assignment.members[3]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '항만순찰', 'members', 3) : '' %>" style="width: 80px;">
                                            </div>
                                </td>
                            </tr>

                                </tbody>
                            </table>
                        </div>
                        
                        <!-- 오른쪽 영역 (성내/시트/매암동지역) -->
                        <div class="assignment-right">
                            <table class="work-assignment-table">
                                <thead>
                                    <tr>
                                        <th class="region-col">지역</th>
                                        <th class="location-col">보안근무지</th>
                                        <th class="personnel-col">편성</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <!-- 성내문 (대원2명, 2행) -->
                                    <tr>
                                        <td rowspan="2" class="region-col">성내지역</td>
                                        <td rowspan="2" class="location-col">성내문</td>
                                        <td class="personnel-col">
                                            <div style="display: flex; gap: 5px; flex-wrap: wrap;">
                                                <input type="text" name="workAssignment[성내문].assignment.members[0]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '성내문', 'members', 0) : '' %>" style="width: 80px;">
                                                <input type="text" name="workAssignment[성내문].assignment.members[1]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '성내문', 'members', 1) : '' %>" style="width: 80px;">
                                            </div>
                                            <input type="hidden" name="workAssignment[성내문].region" value="성내지역">
                                            <input type="hidden" name="workAssignment[성내문].location" value="성내문">
                                            <input type="hidden" name="workAssignment[성내문].assignment.teamLeader" value="">
                                            <input type="hidden" name="workAssignment[성내문].assignment.supervisor" value="">
                                </td>
                                    </tr>
                                    <tr>
                                        <td class="personnel-col">
                                            <input type="text" name="workAssignment[성내문].assignment.members[2]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '성내문', 'members', 2) : '' %>">
                                            <input type="text" name="workAssignment[성내문].assignment.members[3]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '성내문', 'members', 3) : '' %>">
                                </td>
                            </tr>
                                    
                                    <!-- 차량검색소 (대원2명) -->
                                    <tr>
                                        <td class="region-col"></td>
                                        <td class="location-col">차량검색소</td>
                                        <td class="personnel-col">
                                            <input type="text" name="workAssignment[차량검색소].assignment.members[0]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '차량검색소', 'members', 0) : '' %>">
                                            <input type="text" name="workAssignment[차량검색소].assignment.members[1]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '차량검색소', 'members', 1) : '' %>">
                                            <input type="hidden" name="workAssignment[차량검색소].region" value="성내지역">
                                            <input type="hidden" name="workAssignment[차량검색소].location" value="차량검색소">
                                            <input type="hidden" name="workAssignment[차량검색소].assignment.teamLeader" value="">
                                            <input type="hidden" name="workAssignment[차량검색소].assignment.supervisor" value="">
                                </td>
                            </tr>

                                    <!-- 시트1문 (조장, 대원2명) -->
                                    <tr>
                                        <td rowspan="2" class="region-col">시트지역</td>
                                        <td rowspan="2" class="location-col">시트1문</td>
                                        <td class="personnel-col">
                                            <input type="hidden" name="workAssignment[시트1문].region" value="시트">
                                            <input type="hidden" name="workAssignment[시트1문].location" value="시트1문">
                                            <input type="hidden" name="workAssignment[시트1문].assignment.teamLeader" value="">
                                            <label>조장:</label><input type="text" name="workAssignment[시트1문].assignment.supervisor" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '시트1문', 'supervisor') : '' %>">
                                </td>
                                    </tr>
                                    <tr>
                                        <td class="personnel-col">
                                            <div style="display: flex; gap: 5px; flex-wrap: wrap;">
                                                <input type="text" name="workAssignment[시트1문].assignment.members[0]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '시트1문', 'members', 0) : '' %>" style="width: 80px;">
                                                <input type="text" name="workAssignment[시트1문].assignment.members[1]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '시트1문', 'members', 1) : '' %>" style="width: 80px;">
                                                <input type="text" name="workAssignment[시트1문].assignment.members[2]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '시트1문', 'members', 2) : '' %>" style="width: 80px;">
                                            </div>
                                </td>
                                    </tr>
                                    
                                    <!-- 시트1중문 (대원2명) -->
                                    <tr>
                                        <td class="region-col"></td>
                                        <td class="location-col">시트1중문</td>
                                        <td class="personnel-col">
                                            <div style="display: flex; gap: 5px; flex-wrap: wrap;">
                                                <input type="text" name="workAssignment[시트1중문].assignment.members[0]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '시트1중문', 'members', 0) : '' %>" style="width: 80px;">
                                                <input type="text" name="workAssignment[시트1중문].assignment.members[1]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '시트1중문', 'members', 1) : '' %>" style="width: 80px;">
                                            </div>
                                            <input type="hidden" name="workAssignment[시트1중문].region" value="시트지역">
                                            <input type="hidden" name="workAssignment[시트1중문].location" value="시트1중문">
                                            <input type="hidden" name="workAssignment[시트1중문].assignment.teamLeader" value="">
                                            <input type="hidden" name="workAssignment[시트1중문].assignment.supervisor" value="">
                                </td>
                            </tr>
                                    
                                    <!-- 시트1주차장초소 (대원1명) -->
                                    <tr>
                                        <td class="region-col"></td>
                                        <td class="location-col">시트1주차장초소</td>
                                        <td class="personnel-col">
                                            <input type="text" name="workAssignment[시트1주차장초소].assignment.members[0]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '시트1주차장초소', 'members', 0) : '' %>">
                                            <input type="hidden" name="workAssignment[시트1주차장초소].region" value="시트">
                                            <input type="hidden" name="workAssignment[시트1주차장초소].location" value="시트1주차장초소">
                                            <input type="hidden" name="workAssignment[시트1주차장초소].assignment.teamLeader" value="">
                                            <input type="hidden" name="workAssignment[시트1주차장초소].assignment.supervisor" value="">
                                </td>
                            </tr>
                                    
                                    <!-- 시트3문 (대원2명) -->
                                    <tr>
                                        <td class="region-col"></td>
                                        <td class="location-col">시트3문</td>
                                        <td class="personnel-col">
                                            <input type="text" name="workAssignment[시트3문].assignment.members[0]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '시트3문', 'members', 0) : '' %>">
                                            <input type="text" name="workAssignment[시트3문].assignment.members[1]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '시트3문', 'members', 1) : '' %>">
                                            <input type="hidden" name="workAssignment[시트3문].region" value="시트">
                                            <input type="hidden" name="workAssignment[시트3문].location" value="시트3문">
                                            <input type="hidden" name="workAssignment[시트3문].assignment.teamLeader" value="">
                                            <input type="hidden" name="workAssignment[시트3문].assignment.supervisor" value="">
                                </td>
                            </tr>
                                    
                                    <!-- 코일주차장 (대원1명) -->
                                    <tr>
                                        <td class="region-col"></td>
                                        <td class="location-col">코일주차장</td>
                                        <td class="personnel-col">
                                            <input type="text" name="workAssignment[코일주차장].assignment.members[0]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '코일주차장', 'members', 0) : '' %>">
                                            <input type="hidden" name="workAssignment[코일주차장].region" value="시트">
                                            <input type="hidden" name="workAssignment[코일주차장].location" value="코일주차장">
                                            <input type="hidden" name="workAssignment[코일주차장].assignment.teamLeader" value="">
                                            <input type="hidden" name="workAssignment[코일주차장].assignment.supervisor" value="">
                                </td>
                            </tr>

                                    <!-- 엔진4부 (조장, 대원2명) -->
                                    <tr>
                                        <td rowspan="2" class="region-col">매암동지역</td>
                                        <td rowspan="2" class="location-col">엔진4부</td>
                                        <td class="personnel-col">
                                            <input type="hidden" name="workAssignment[엔진4부].region" value="매암동">
                                            <input type="hidden" name="workAssignment[엔진4부].location" value="엔진4부">
                                            <input type="hidden" name="workAssignment[엔진4부].assignment.teamLeader" value="">
                                            <label>조장:</label><input type="text" name="workAssignment[엔진4부].assignment.supervisor" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '엔진4부', 'supervisor') : '' %>">
                                </td>
                                    </tr>
                                    <tr>
                                        <td class="personnel-col">
                            <input type="text" name="workAssignment[엔진4부].assignment.members[0]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '엔진4부', 'members', 0) : '' %>">
                            <input type="text" name="workAssignment[엔진4부].assignment.members[1]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '엔진4부', 'members', 1) : '' %>">
                                </td>
                            </tr>
                                    
                                    <!-- 야적장초소 (대원1명) -->
                                    <tr>
                                        <td class="region-col"></td>
                                        <td class="location-col">야적장초소</td>
                                        <td class="personnel-col">
                                            <input type="text" name="workAssignment[야적장초소].assignment.members[0]" value="<%= workOrder ? findAssignmentData(workOrder.workAssignment, '야적장초소', 'members', 0) : '' %>">
                                            <input type="hidden" name="workAssignment[야적장초소].region" value="매암동">
                                            <input type="hidden" name="workAssignment[야적장초소].location" value="야적장초소">
                                            <input type="hidden" name="workAssignment[야적장초소].assignment.teamLeader" value="">
                                            <input type="hidden" name="workAssignment[야적장초소].assignment.supervisor" value="">
                                </td>
                            </tr>
                        </tbody>
                    </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- 직무 교육 -->
            <div class="form-section">
                <div class="section-header">□ 직무(안전/보건) 교육</div>
                <div class="section-content">
                    <div class="form-row">
                        <div class="form-group" style="width: 50%;">
                            <label>금주중점</label>
                            <div style="margin-bottom: 10px;">
                                <button type="button" class="btn btn-secondary" onclick="addWeeklyFocus()" style="font-size: 12px; padding: 5px 10px;">금주중점 추가</button>
                                    </div>
                            <div id="weeklyFocusItems">
                                <!-- 금주중점 항목들이 여기에 동적으로 추가됩니다 -->
                                    </div>
                                    </div>
                        <div class="form-group" style="width: 50%;">
                            <label>교육내용</label>
                            <div style="margin-bottom: 10px;">
                                <button type="button" class="btn btn-secondary" onclick="addEducationContent()" style="font-size: 12px; padding: 5px 10px;">교육내용 추가</button>
                                    </div>
                            <div id="educationContentItems">
                                <!-- 교육내용 항목들이 여기에 동적으로 추가됩니다 -->
                            </div>
                            </div>
                        </div>
                </div>
            </div>

            <!-- 버튼 -->
            <div style="text-align: center; margin-top: 30px;">
                <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#previewModal" style="margin-right: 10px;">
                    <i class="fas fa-eye me-1"></i>미리보기
                </button>
                <button type="submit" class="btn btn-primary">저장</button>
                <button type="button" class="btn btn-secondary" onclick="history.back()">취소</button>
                <a href="/work-orders" class="btn btn-secondary" style="text-decoration: none; color: white;">목록</a>
            </div>
        </form>
    </div>

    <!-- 미리보기 모달 -->
    <div class="modal fade" id="previewModal" tabindex="-1" aria-labelledby="previewModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="previewModalLabel">
                        <i class="fas fa-eye me-2"></i>근무명령서 미리보기
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="previewContent">
                        <!-- 미리보기 내용이 여기에 동적으로 생성됩니다 -->
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
                    <button type="button" class="btn btn-primary" onclick="saveFromPreview()">
                        <i class="fas fa-save me-1"></i>저장하기
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // 페이지 로드 시 자동입력 실행 (새 명령서 작성 시 초기화)
        document.addEventListener('DOMContentLoaded', function() {
            // 모든 필드 초기화
            resetAllFields();
            autoFillWorkInfo();
            autoFillPersonnelInfo();
            autoFillEducationInfo();
            clearWorkAssignmentTable();
            displayTodaySchedule();
        });

        // 모든 필드 초기화 함수
        function resetAllFields() {
            // 근무 정보 초기화
            document.getElementById('workDate').value = '';
            document.getElementById('workTeam').value = '';
            document.getElementById('workTime').value = '';
            document.getElementById('workTimeStart').value = '';
            document.getElementById('workTimeEnd').value = '';
            document.getElementById('workShift').value = '';
            
            // 인원 현황 초기화
            document.getElementById('totalPersonnel').value = '';
            document.getElementById('absentPersonnel').value = '';
            document.getElementById('currentPersonnel').value = '';
            
            // 사고내용 및 교육내용 초기화
            document.getElementById('accidentItems').innerHTML = '';
            document.getElementById('weeklyFocusItems').innerHTML = '';
            document.getElementById('educationContentItems').innerHTML = '';
            
            // 근무편성 테이블 초기화
            clearWorkAssignmentTable();
        }

        // 근무정보 자동입력 (새 명령서 작성 시 초기화)
        function autoFillWorkInfo() {
            const today = new Date();
            const year = today.getFullYear();
            const month = String(today.getMonth() + 1).padStart(2, '0');
            const day = String(today.getDate()).padStart(2, '0');
            const dateString = `${year}-${month}-${day}`;
            
            // 기본값만 설정하고 기존 데이터 제거
            document.getElementById('workDate').value = dateString;
            document.getElementById('workTeam').value = ''; // 빈 값으로 초기화
            document.getElementById('workTime').value = ''; // 빈 값으로 초기화
        }

        // 주차 계산 함수 (3주 주기)
        function getWeekCycle(date) {
            // 기준일: 2025년 1월 1일 (수요일)을 1주차로 설정
            const baseDate = new Date('2025-01-01');
            const targetDate = new Date(date);
            
            // 주차 시작일 계산 (월요일)
            const getWeekStart = (date) => {
                const day = date.getDay();
                const diff = date.getDate() - day + (day === 0 ? -6 : 1);
                const weekStart = new Date(date);
                weekStart.setDate(diff);
                weekStart.setHours(0, 0, 0, 0);
                return weekStart;
            };
            
            const baseWeekStart = getWeekStart(baseDate);
            const targetWeekStart = getWeekStart(targetDate);
            
            // 주차 차이 계산
            const timeDiff = targetWeekStart.getTime() - baseWeekStart.getTime();
            const weekDiff = Math.floor(timeDiff / (7 * 24 * 60 * 60 * 1000));
            
            // 3주 주기로 순환 (1, 2, 3, 1, 2, 3...)
            return (weekDiff % 3) + 1;
        }

        // 주차 계산 함수 (3주 주기)
        function getWeekCycle(date) {
            // 기준일: 2025년 1월 1일 (수요일)을 1주차로 설정
            const baseDate = new Date('2025-01-01');
            const targetDate = new Date(date);
            
            // 주차 시작일 계산 (월요일)
            const getWeekStart = (date) => {
                const day = date.getDay();
                const diff = date.getDate() - day + (day === 0 ? -6 : 1);
                const weekStart = new Date(date);
                weekStart.setDate(diff);
                weekStart.setHours(0, 0, 0, 0);
                return weekStart;
            };
            
            const baseWeekStart = getWeekStart(baseDate);
            const targetWeekStart = getWeekStart(targetDate);
            
            // 주차 차이 계산
            const timeDiff = targetWeekStart.getTime() - baseWeekStart.getTime();
            const weekDiff = Math.floor(timeDiff / (7 * 24 * 60 * 60 * 1000));
            
            // 3주 주기로 순환 (1, 2, 3, 1, 2, 3...)
            return (weekDiff % 3) + 1;
        }

        // 근무반 선택 시 근무시간 자동입력 (3주 주기 순환 스케줄)
        function updateWorkTime() {
            const workTeam = document.getElementById('workTeam').value;
            const workTimeField = document.getElementById('workTime');
            const workDate = document.getElementById('workDate').value;
            
            // 선택된 날짜의 요일 확인
            const selectedDate = new Date(workDate);
            const dayOfWeek = selectedDate.getDay(); // 0=일요일, 1=월요일, ..., 6=토요일
            
            // 주차 계산 (3주 주기)
            const weekCycle = getWeekCycle(selectedDate);
            
            let workTime = '';
            
            // 주말/공휴일 근무
            if (dayOfWeek === 0 || dayOfWeek === 6) {
                if (dayOfWeek === 0) { // 일요일 특근근무
                    // 주차 계산으로 각 팀의 평일 근무형태 확인
                    const weekNumber = getWeekNumber(selectedDate);
                    const team1Weekday = getTeamSchedule(1, weekNumber);
                    const team2Weekday = getTeamSchedule(2, weekNumber);
                    const team3Weekday = getTeamSchedule(3, weekNumber);
                    
                    // 일요일은 주간반이 다수 근무자(20명)를 포함하므로 주간반을 근무반으로 지정
                    const weekdayTeam = getTeamSchedule(parseInt(workTeam.replace('보안', '').replace('반', '')), weekNumber);
                    
                    if (weekdayTeam === '주간') {
                        // 주간반이 주간특근근무와 야간특근근무 통합 (A조+B조 40명 + 지원조 20명)
                        workTime = '주간특근근무(06:00~18:00) / 야간특근근무(18:00~06:00)';
                    } else {
                        // 심야반, 초야반은 일요일 휴무 (지원조만 참여)
                        workTime = '휴무';
                    }
                } else { // 토요일 특근근무
                    // 주차 계산으로 각 팀의 평일 근무형태 확인
                    const weekNumber = getWeekNumber(selectedDate);
                    const teamNumber = parseInt(workTeam.replace('보안', '').replace('반', ''));
                    const weekdayWorkType = getTeamSchedule(teamNumber, weekNumber);
                    
                    if (weekdayWorkType === '심야') {
                        // 심야팀은 토요일 1~30번 야간특근, 31~40번 휴무
                        workTime = '야간특근근무(18:00~06:00)';
                    } else if (weekdayWorkType === '초야') {
                        // 초야팀은 토요일 1~30번 주간특근, 31~40번 휴무
                        workTime = '주간특근근무(06:00~18:00)';
                    } else {
                        // 주간팀은 토요일 휴무
                        workTime = '휴무';
                    }
                }
            } else {
                // 평일 근무 (새로운 함수 사용)
                const weekNumber = getWeekNumber(selectedDate);
                const teamNumber = parseInt(workTeam.replace('보안', '').replace('반', ''));
                const teamSchedule = getTeamSchedule(teamNumber, weekNumber);
                
                switch(teamSchedule) {
                    case '주간':
                        workTime = '주간근무(06:00~14:00)';
                        break;
                    case '초야':
                        workTime = '초야근무(14:00~22:00)';
                        break;
                    case '심야':
                        workTime = '심야근무(22:00~06:00)';
                        break;
                    default:
                        workTime = '근무형태 미정';
                }
            }
            
            workTimeField.value = workTime;
            
            // 시간 정보 분리 및 설정
            const workTimeStartField = document.getElementById('workTimeStart');
            const workTimeEndField = document.getElementById('workTimeEnd');
            const workShiftField = document.getElementById('workShift');
            
            // 시간 추출 (예: "야간특근(18:00~06:00)" -> start: "18:00", end: "06:00")
            const timeMatch = workTime.match(/\((\d{2}:\d{2})~(\d{2}:\d{2})\)/);
            if (timeMatch) {
                workTimeStartField.value = timeMatch[1];
                workTimeEndField.value = timeMatch[2];
            } else {
                workTimeStartField.value = '';
                workTimeEndField.value = '';
            }
            
            // shift 값 설정 (근무시간에서 추출)
            if (workTime.includes('주간')) {
                workShiftField.value = '주간';
            } else if (workTime.includes('초야')) {
                workShiftField.value = '초야';
            } else if (workTime.includes('심야')) {
                workShiftField.value = '심야';
            } else if (workTime.includes('야간특근')) {
                workShiftField.value = '야간특근';
            } else if (workTime.includes('주간특근')) {
                workShiftField.value = '주간특근';
            } else if (workTime.includes('휴무')) {
                workShiftField.value = '휴무';
            } else {
                workShiftField.value = '';
            }
            
            // 총원 자동 설정 (평일: 40명, 휴일: 30명)
            const totalPersonnelField = document.getElementById('totalPersonnel');
            const absentPersonnelField = document.getElementById('absentPersonnel');
            const currentPersonnelField = document.getElementById('currentPersonnel');
            
            if (dayOfWeek === 0 || dayOfWeek === 6) {
                // 주말/공휴일: 30명
                totalPersonnelField.value = '30';
                const absent = parseInt(absentPersonnelField.value) || 0;
                currentPersonnelField.value = 30 - absent;
            } else {
                // 평일: 40명
                totalPersonnelField.value = '40';
                const absent = parseInt(absentPersonnelField.value) || 0;
                currentPersonnelField.value = 40 - absent;
            }
        }

        // 인원현황 자동입력 (새 명령서 작성 시 초기화)
        function autoFillPersonnelInfo() {
            // 기본값 설정
            document.getElementById('totalPersonnel').value = '40';
            document.getElementById('absentPersonnel').value = '0';
            document.getElementById('currentPersonnel').value = '40';
            
            // 기존 사고내용 제거
            document.getElementById('accidentItems').innerHTML = '';
            
            // 자동 계산 이벤트 리스너 추가
            setupPersonnelCalculation();
        }

        // 인원 계산 자동화 설정
        function setupPersonnelCalculation() {
            const totalInput = document.getElementById('totalPersonnel');
            const absentInput = document.getElementById('absentPersonnel');
            const currentInput = document.getElementById('currentPersonnel');
            
            // 총원 변경 시 현재원 자동 계산
            totalInput.addEventListener('input', function() {
                const total = parseInt(this.value) || 0;
                const absent = parseInt(absentInput.value) || 0;
                const current = Math.max(0, total - absent);
                currentInput.value = current;
            });

            // 결원 수 변경 시 현재원 자동 계산
            absentInput.addEventListener('input', function() {
                const total = parseInt(totalInput.value) || 0;
                const absent = parseInt(this.value) || 0;
                const current = Math.max(0, total - absent);
                currentInput.value = current;
            });
        }

        // 직무교육 자동입력 (새 명령서 작성 시 초기화)
        function autoFillEducationInfo() {
            // 기존 교육내용 제거
            document.getElementById('weeklyFocusItems').innerHTML = '';
            document.getElementById('educationContentItems').innerHTML = '';
        }

        // 근무편성 테이블 초기화
        function clearWorkAssignmentTable() {
            // 모든 근무편성 입력 필드 초기화
            const inputs = document.querySelectorAll('.work-assignment-table input[type="text"]');
            inputs.forEach(input => {
                input.value = '';
            });
        }

        // 근무편성 데이터 검증 및 요약
        function validateWorkAssignment() {
            const assignments = [];
            const inputs = document.querySelectorAll('.work-assignment-table input[type="text"]');
            
            inputs.forEach(input => {
                if (input.value && input.value.trim()) {
                    const location = input.closest('tr').querySelector('.location-col').textContent.trim();
                    assignments.push({
                        location: location,
                        member: input.value.trim()
                    });
                }
            });
            
            return assignments;
        }

        // 근무편성 요약 표시
        function showAssignmentSummary() {
            const assignments = validateWorkAssignment();
            const summary = assignments.reduce((acc, assignment) => {
                if (!acc[assignment.location]) {
                    acc[assignment.location] = [];
                }
                acc[assignment.location].push(assignment.member);
                return acc;
            }, {});
            
            console.log('근무편성 요약:', summary);
            return summary;
        }

        // 미리보기 모달 열기
        document.getElementById('previewModal').addEventListener('show.bs.modal', function() {
            updatePreviewContent();
        });

        // 미리보기 내용 업데이트
        function updatePreviewContent() {
            if (!validateForm()) {
                return;
            }
            
            const workDate = document.getElementById('workDate').value;
            const workTeam = document.getElementById('workTeam').value;
            const workTime = document.getElementById('workTime').value;
            const totalPersonnel = document.getElementById('totalPersonnel').value;
            const currentPersonnel = document.getElementById('currentPersonnel').value;
            const absentPersonnel = document.getElementById('absentPersonnel').value;
            
            // 사고내용 수집
            const accidentItems = [];
            document.querySelectorAll('#accidentItems select, #accidentItems input[type="text"]').forEach((element, index) => {
                if (index % 2 === 0) { // select 요소
                    const type = element.value;
                    const nameInput = element.parentElement.querySelector('input[type="text"]');
                    const name = nameInput ? nameInput.value : '';
                    if (type && name) {
                        accidentItems.push(`${type}: ${name}`);
                    }
                }
            });
            
            // 교육내용 수집
            const weeklyFocusItems = [];
            document.querySelectorAll('#weeklyFocusItems input[type="text"]').forEach(input => {
                if (input.value.trim()) {
                    weeklyFocusItems.push(input.value.trim());
                }
            });
            
            const educationContentItems = [];
            document.querySelectorAll('#educationContentItems input[type="text"]').forEach(input => {
                if (input.value.trim()) {
                    educationContentItems.push(input.value.trim());
                }
            });
            
            // 근무편성 수집
            const assignments = showAssignmentSummary();
            const assignmentRows = Object.keys(assignments).map(location => 
                `<tr><td><strong>${location}</strong></td><td>${assignments[location].join(', ')}</td></tr>`
            ).join('');
            
            const previewHTML = `
                <div class="preview-container">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="card mb-3">
                                <div class="card-header bg-primary text-white">
                                    <h6 class="mb-0"><i class="fas fa-calendar me-2"></i>근무 정보</h6>
                                </div>
                                <div class="card-body">
                                    <p><strong>날짜:</strong> ${workDate || '미입력'}</p>
                                    <p><strong>근무반:</strong> ${workTeam || '미선택'}</p>
                                    <p><strong>근무시간:</strong> ${workTime || '미입력'}</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card mb-3">
                                <div class="card-header bg-info text-white">
                                    <h6 class="mb-0"><i class="fas fa-users me-2"></i>인원 현황</h6>
                                </div>
                                <div class="card-body">
                                    <p><strong>총원:</strong> ${totalPersonnel || '0'}명</p>
                                    <p><strong>결원:</strong> ${absentPersonnel || '0'}명</p>
                                    <p><strong>현재원:</strong> ${currentPersonnel || '0'}명</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    ${accidentItems.length > 0 ? `
                    <div class="card mb-3">
                        <div class="card-header bg-warning text-dark">
                            <h6 class="mb-0"><i class="fas fa-exclamation-triangle me-2"></i>사고내용</h6>
                        </div>
                        <div class="card-body">
                            <ul class="mb-0">
                                ${accidentItems.map(item => `<li>${item}</li>`).join('')}
                            </ul>
                        </div>
                    </div>
                    ` : ''}
                    
                    <div class="card mb-3">
                        <div class="card-header bg-success text-white">
                            <h6 class="mb-0"><i class="fas fa-map-marker-alt me-2"></i>근무편성</h6>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-sm table-bordered">
                                    <thead class="table-light">
                                        <tr>
                                            <th width="20%">근무지</th>
                                            <th width="80%">편성</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        ${assignmentRows || '<tr><td colspan="2" class="text-center text-muted">편성 정보가 없습니다</td></tr>'}
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    
                    ${weeklyFocusItems.length > 0 || educationContentItems.length > 0 ? `
                    <div class="card mb-3">
                        <div class="card-header bg-secondary text-white">
                            <h6 class="mb-0"><i class="fas fa-graduation-cap me-2"></i>직무교육</h6>
                        </div>
                        <div class="card-body">
                            ${weeklyFocusItems.length > 0 ? `
                                <h6>금주중점:</h6>
                                <ul>
                                    ${weeklyFocusItems.map(item => `<li>${item}</li>`).join('')}
                                </ul>
                            ` : ''}
                            ${educationContentItems.length > 0 ? `
                                <h6>교육내용:</h6>
                                <ul>
                                    ${educationContentItems.map(item => `<li>${item}</li>`).join('')}
                                </ul>
                            ` : ''}
                        </div>
                    </div>
                    ` : ''}
                </div>
            `;
            
            document.getElementById('previewContent').innerHTML = previewHTML;
        }

        // 미리보기에서 저장하기
        function saveFromPreview() {
            document.querySelector('form').submit();
        }

        // 사고 항목 추가
        function addAccidentItem(accidentType = '', personnelName = '') {
            const container = document.getElementById('accidentItems');
            const div = document.createElement('div');
            div.style.marginBottom = '10px';
            div.style.display = 'flex';
            div.style.alignItems = 'center';
            div.style.gap = '10px';
            
            div.innerHTML = `
                <select name="personnelStatus[absentDetails][][type]" style="width: 120px; padding: 5px; border: 1px solid #ddd; border-radius: 4px; font-size: 12px;">
                    <option value="">선택하세요</option>
                    <option value="연차1" ${accidentType === '연차1' ? 'selected' : ''}>연차1</option>
                    <option value="연차2" ${accidentType === '연차2' ? 'selected' : ''}>연차2</option>
                    <option value="병가" ${accidentType === '병가' ? 'selected' : ''}>병가</option>
                    <option value="산재" ${accidentType === '산재' ? 'selected' : ''}>산재</option>
                    <option value="정직" ${accidentType === '정직' ? 'selected' : ''}>정직</option>
                    <option value="휴직" ${accidentType === '휴직' ? 'selected' : ''}>휴직</option>
                    <option value="경조" ${accidentType === '경조' ? 'selected' : ''}>경조</option>
                    <option value="결근" ${accidentType === '결근' ? 'selected' : ''}>결근</option>
                    <option value="기타" ${accidentType === '기타' ? 'selected' : ''}>기타</option>
                    <option value="근무지원조" ${accidentType === '근무지원조' ? 'selected' : ''}>근무지원조</option>
                </select>
                <span>:</span>
                <input type="text" name="personnelStatus[absentDetails][][employeeName]" placeholder="명단" value="${personnelName}" style="width: 150px; padding: 5px; border: 1px solid #ddd; border-radius: 4px; font-size: 12px;">
                <button type="button" onclick="removeAccidentItem(this)" style="background: #dc3545; color: white; border: none; padding: 5px 10px; border-radius: 4px; cursor: pointer; font-size: 12px;">삭제</button>
            `;
            
            container.appendChild(div);
        }
        
        // 사고 항목 삭제
        function removeAccidentItem(button) {
            button.parentElement.remove();
        }
        
        // 금주중점 추가
        function addWeeklyFocus(content = '') {
            const container = document.getElementById('weeklyFocusItems');
            const div = document.createElement('div');
            div.style.marginBottom = '10px';
            div.style.display = 'flex';
            div.style.alignItems = 'center';
            div.style.gap = '10px';
            
            div.innerHTML = `
                <input type="text" name="education[weeklyFocus][]" placeholder="금주중점 입력" value="${content}" style="flex: 1; padding: 5px; border: 1px solid #ddd; border-radius: 4px; font-size: 12px;">
                <button type="button" onclick="removeWeeklyFocus(this)" style="background: #dc3545; color: white; border: none; padding: 5px 10px; border-radius: 4px; cursor: pointer; font-size: 12px;">삭제</button>
            `;
            
            container.appendChild(div);
        }
        
        // 금주중점 삭제
        function removeWeeklyFocus(button) {
            button.parentElement.remove();
        }
        
        // 교육내용 추가
        function addEducationContent(content = '') {
            const container = document.getElementById('educationContentItems');
            const div = document.createElement('div');
            div.style.marginBottom = '10px';
            div.style.display = 'flex';
            div.style.alignItems = 'center';
            div.style.gap = '10px';
            
            div.innerHTML = `
                <input type="text" name="education[content][]" placeholder="교육내용 입력" value="${content}" style="flex: 1; padding: 5px; border: 1px solid #ddd; border-radius: 4px; font-size: 12px;">
                <button type="button" onclick="removeEducationContent(this)" style="background: #dc3545; color: white; border: none; padding: 5px 10px; border-radius: 4px; cursor: pointer; font-size: 12px;">삭제</button>
            `;
            
            container.appendChild(div);
        }
        
        // 교육내용 삭제
        function removeEducationContent(button) {
            button.parentElement.remove();
        }

        // 중복된 이벤트 리스너는 setupPersonnelCalculation()에서 처리됨

        

        // 폼 검증 함수
        function validateForm() {
            const workDate = document.getElementById('workDate').value;
            const workTeam = document.getElementById('workTeam').value;
            const totalPersonnel = document.getElementById('totalPersonnel').value;
            const currentPersonnel = document.getElementById('currentPersonnel').value;
            
            if (!workDate) {
                alert('근무 날짜를 선택해주세요.');
                return false;
            }
            
            if (!workTeam) {
                alert('근무반을 선택해주세요.');
                return false;
            }
            
            if (!totalPersonnel || totalPersonnel <= 0) {
                alert('총원을 올바르게 입력해주세요.');
                return false;
            }
            
            if (!currentPersonnel || currentPersonnel <= 0) {
                alert('현재원을 올바르게 입력해주세요.');
                return false;
            }
            
            // 근무편성 검증
            const assignmentInputs = document.querySelectorAll('.work-assignment-table input[type="text"]');
            let hasAssignment = false;
            assignmentInputs.forEach(input => {
                if (input.value && input.value.trim()) {
                    hasAssignment = true;
                }
            });
            
            if (!hasAssignment) {
                if (!confirm('근무편성이 입력되지 않았습니다. 계속 진행하시겠습니까?')) {
                    return false;
                }
            }
            
            return true;
        }

        // 폼 제출 시 검증
        document.querySelector('form').addEventListener('submit', function(e) {
            if (!validateForm()) {
                e.preventDefault();
                return false;
            }
        });

        // DOM 로드 완료 후 이벤트 리스너 추가
        document.addEventListener('DOMContentLoaded', function() {
            // 근무반 선택 시 근무시간 자동입력
            const workTeamElement = document.getElementById('workTeam');
            const workDateElement = document.getElementById('workDate');
            
            if (workTeamElement) {
                workTeamElement.addEventListener('change', updateWorkTime);
            }
            
            // 날짜 변경 시에도 근무시간 자동입력
            if (workDateElement) {
                workDateElement.addEventListener('change', updateWorkTime);
            }
        });

        // 오늘의 근무형태 표시 함수
        function displayTodaySchedule() {
            const today = new Date();
            const dayOfWeek = today.getDay();
            
            // 일요일인 경우에만 특근근무 스케줄 표시
            if (dayOfWeek === 0) {
                const weekNumber = getWeekNumber(today);
                const cycle = weekNumber % 3;
                
                // 각 팀의 평일 근무형태 계산
                const team1Weekday = getTeamSchedule(1, weekNumber);
                const team2Weekday = getTeamSchedule(2, weekNumber);
                const team3Weekday = getTeamSchedule(3, weekNumber);
                
                const container = document.getElementById('todayScheduleContainer');
                
                // 일요일 특근근무 스케줄 HTML 생성
                container.innerHTML = `
                    <div class="col-md-12">
                        <div class="alert alert-info">
                            <h6><i class="fa-solid fa-calendar-day me-2"></i>2025년 9월 7일 일요일 특근근무</h6>
                            <div class="row mt-3">
                                <div class="col-md-6">
                                    <div class="card border-success">
                                        <div class="card-header bg-success text-white py-2">
                                            <h6 class="mb-0">보안2반 - 주간특근</h6>
                                        </div>
                                        <div class="card-body py-2">
                                            <div class="text-center">
                                                <div class="h6 mb-0 text-success">주간특근근무</div>
                                                <small class="text-muted">06:00~18:00 (A조 20명 + 지원조 10명)</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="card border-warning">
                                        <div class="card-header bg-warning text-white py-2">
                                            <h6 class="mb-0">보안2반 - 야간특근</h6>
                                        </div>
                                        <div class="card-body py-2">
                                            <div class="text-center">
                                                <div class="h6 mb-0 text-warning">야간특근근무</div>
                                                <small class="text-muted">18:00~06:00 (B조 20명 + 지원조 10명)</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="mt-3">
                                <small class="text-muted">
                                    <i class="fa-solid fa-info-circle me-1"></i>
                                    일요일은 특근근무로 12시간씩 근무합니다. 각 팀의 조별로 다른 근무형태를 가집니다.
                                </small>
                            </div>
                        </div>
                    </div>
                `;
            } else {
                // 평일인 경우 간단한 메시지 표시
                const container = document.getElementById('todayScheduleContainer');
                container.innerHTML = `
                    <div class="col-md-12">
                        <div class="alert alert-secondary">
                            <h6 style="font-size: 14px;"><i class="fa-solid fa-calendar me-2"></i>평일 근무</h6>
                            <p class="mb-0" style="font-size: 14px;">오늘은 평일입니다. 각 팀의 정규 근무형태를 확인하세요.</p>
                        </div>
                    </div>
                `;
            }
        }

        // 주차 계산 함수 (1월 1일 수요일부터 시작, 기준일 조정)
        function getWeekNumber(date) {
            // 2025년 1월 1일(수요일) 06:00을 기준으로 계산하되, 1주차 부족 문제 해결
            const yearStart = new Date(2025, 0, 1, 6, 0, 0); // 2025년 1월 1일 06:00
            const targetDate = new Date(date);
            
            // 월요일 06:00으로 조정
            const dayOfWeek = targetDate.getDay();
            const mondayOffset = dayOfWeek === 0 ? 6 : dayOfWeek - 1;
            
            const monday6am = new Date(targetDate);
            monday6am.setDate(targetDate.getDate() - mondayOffset);
            monday6am.setHours(6, 0, 0, 0);
            
            const weekDiff = Math.floor((monday6am - yearStart) / (7 * 24 * 60 * 60 * 1000));
            const weekNumber = weekDiff + 2; // +1을 +2로 수정하여 1주차 추가
            
            return weekNumber;
        }

        // 팀별 근무형태 계산 함수 (올바른 패턴 기반)
        function getTeamSchedule(teamNumber, weekNumber) {
            // 1주차: 1반 초야, 2반 심야, 3반 주간
            // 2주차: 1반 주간, 2반 초야, 3반 심야
            // 3주차: 1반 심야, 2반 주간, 3반 초야
            // 4주차: 1반 초야, 2반 심야, 3반 주간 (1주차와 동일)
            // 5주차: 1반 주간, 2반 초야, 3반 심야 (2주차와 동일)
            // 6주차: 1반 심야, 2반 주간, 3반 초야 (3주차와 동일)
            
            const cycle = (weekNumber - 1) % 3; // 0, 1, 2 반복
            
            if (teamNumber === 1) {
                // 1반: 초야(1주차) → 주간(2주차) → 심야(3주차)
                const schedules = ['초야', '주간', '심야'];
                return schedules[cycle];
            } else if (teamNumber === 2) {
                // 2반: 심야(1주차) → 초야(2주차) → 주간(3주차)
                const schedules = ['심야', '초야', '주간'];
                return schedules[cycle];
            } else if (teamNumber === 3) {
                // 3반: 주간(1주차) → 심야(2주차) → 초야(3주차)
                const schedules = ['주간', '심야', '초야'];
                return schedules[cycle];
            }
            
            return '주간';
        }
        
    </script>

<%- include('footer') %>
