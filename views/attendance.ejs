<%- include('header') %>

<div class="container mt-4">
  <div class="row">
    <div class="col-12">
      <!-- 페이지 헤더 -->
      <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
          <h2 class="mb-1">
            <i class="fa-solid fa-clock me-2 text-primary"></i>근태 관리
          </h2>
          <p class="text-muted mb-0">직원들의 일일 근태를 입력하고 관리합니다.</p>
        </div>
        <div class="d-flex gap-2">
          <input type="date" id="attendanceDate" class="form-control" value="<%= today %>">
          <button class="btn btn-primary" onclick="loadAttendanceData()">
            <i class="fa-solid fa-search me-1"></i>조회
          </button>
        </div>
      </div>

      <!-- 근태 입력 폼 -->
      <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
          <h5 class="mb-0">
            <i class="fa-solid fa-edit me-2"></i>근태 입력
          </h5>
        </div>
        <div class="card-body p-0">
          <form id="attendanceForm">
            <div class="table-responsive">
              <table class="table table-hover mb-0">
                <thead class="table-light">
                  <tr>
                    <th style="width: 120px;">이름</th>
                    <th style="width: 100px;">부서</th>
                    <th style="width: 100px;">직급</th>
                    <th style="width: 120px;">근태 상태</th>
                    <th style="width: 120px;">출근 시간</th>
                    <th style="width: 120px;">퇴근 시간</th>
                    <th style="width: 200px;">비고</th>
                  </tr>
                </thead>
                <tbody>
                  <% employees.forEach(function(employee) { %>
                  <tr>
                    <td class="align-middle">
                      <strong><%= employee.name %></strong>
                    </td>
                    <td class="align-middle">
                      <span class="badge bg-secondary"><%= employee.department || '부서미정' %></span>
                    </td>
                    <td class="align-middle">
                      <span class="badge bg-info"><%= employee.position || '직급미정' %></span>
                    </td>
                    <td class="align-middle">
                      <select class="form-select form-select-sm" name="<%= employee._id %>_status" onchange="toggleTimeInputs('<%= employee._id %>')">
                        <option value="">선택</option>
                        <option value="출근">출근</option>
                        <option value="휴가">휴가</option>
                        <option value="병가">병가</option>
                        <option value="출장">출장</option>
                        <option value="결근">결근</option>
                        <option value="반차">반차</option>
                      </select>
                    </td>
                    <td class="align-middle">
                      <input type="time" class="form-control form-control-sm" name="<%= employee._id %>_checkIn" disabled>
                    </td>
                    <td class="align-middle">
                      <input type="time" class="form-control form-control-sm" name="<%= employee._id %>_checkOut" disabled>
                    </td>
                    <td class="align-middle">
                      <input type="text" class="form-control form-control-sm" name="<%= employee._id %>_note" placeholder="비고사항">
                    </td>
                  </tr>
                  <% }); %>
                </tbody>
              </table>
            </div>
          </form>
        </div>
        <div class="card-footer">
          <div class="d-flex justify-content-between align-items-center">
            <div class="text-muted">
              <small>총 <strong><%= employees.length %></strong>명의 직원</small>
            </div>
            <div class="d-flex gap-2">
              <button class="btn btn-outline-secondary" onclick="resetForm()">
                <i class="fa-solid fa-undo me-1"></i>초기화
              </button>
              <button class="btn btn-success" onclick="saveAttendance()">
                <i class="fa-solid fa-save me-1"></i>저장
              </button>
            </div>
          </div>
        </div>
      </div>

      <!-- 저장 결과 알림 -->
      <div id="saveResult" class="alert mt-3" style="display: none;"></div>
    </div>
  </div>
</div>

<script>
// 근태 상태에 따라 시간 입력 필드 활성화/비활성화
function toggleTimeInputs(employeeId) {
  const statusSelect = document.querySelector(`select[name="${employeeId}_status"]`);
  const checkInInput = document.querySelector(`input[name="${employeeId}_checkIn"]`);
  const checkOutInput = document.querySelector(`input[name="${employeeId}_checkOut"]`);
  
  if (statusSelect.value === '출근') {
    checkInInput.disabled = false;
    checkOutInput.disabled = false;
  } else {
    checkInInput.disabled = true;
    checkOutInput.disabled = true;
    checkInInput.value = '';
    checkOutInput.value = '';
  }
}

// 근태 데이터 저장
async function saveAttendance() {
  try {
    const date = document.getElementById('attendanceDate').value;
    const form = document.getElementById('attendanceForm');
    const formData = new FormData(form);
    
    const attendanceData = {};
    
    // 폼 데이터를 구조화된 객체로 변환
    for (const [key, value] of formData.entries()) {
      const [employeeId, field] = key.split('_');
      
      if (!attendanceData[employeeId]) {
        attendanceData[employeeId] = {};
      }
      
      attendanceData[employeeId][field] = value;
    }
    
    // API 호출
    const response = await fetch('/attendance/save', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        date: date,
        attendanceData: attendanceData
      })
    });
    
    const result = await response.json();
    
    // 결과 표시
    const resultDiv = document.getElementById('saveResult');
    resultDiv.style.display = 'block';
    
    if (result.success) {
      resultDiv.className = 'alert alert-success mt-3';
      resultDiv.innerHTML = `
        <i class="fa-solid fa-check-circle me-2"></i>
        ${result.message}
      `;
    } else {
      resultDiv.className = 'alert alert-danger mt-3';
      resultDiv.innerHTML = `
        <i class="fa-solid fa-exclamation-triangle me-2"></i>
        ${result.message}
      `;
    }
    
    // 3초 후 알림 숨기기
    setTimeout(() => {
      resultDiv.style.display = 'none';
    }, 3000);
    
  } catch (error) {
    console.error('근태 저장 오류:', error);
    alert('근태 저장 중 오류가 발생했습니다.');
  }
}

// 폼 초기화
function resetForm() {
  if (confirm('모든 입력 내용을 초기화하시겠습니까?')) {
    document.getElementById('attendanceForm').reset();
    
    // 모든 시간 입력 필드 비활성화
    const timeInputs = document.querySelectorAll('input[type="time"]');
    timeInputs.forEach(input => {
      input.disabled = true;
      input.value = '';
    });
    
    // 상태 선택 초기화
    const statusSelects = document.querySelectorAll('select[name$="_status"]');
    statusSelects.forEach(select => {
      select.value = '';
    });
  }
}

// 특정 날짜의 근태 데이터 조회
async function loadAttendanceData() {
  try {
    const date = document.getElementById('attendanceDate').value;
    
    const response = await fetch(`/attendance/data/${date}`);
    const result = await response.json();
    
    if (result.success) {
      // 기존 데이터로 폼 채우기
      const data = result.data;
      
      for (const employeeId in data) {
        const attendance = data[employeeId];
        
        if (attendance.status) {
          // 상태 선택
          const statusSelect = document.querySelector(`select[name="${employeeId}_status"]`);
          if (statusSelect) {
            statusSelect.value = attendance.status;
            toggleTimeInputs(employeeId);
          }
          
          // 출근 시간
          const checkInInput = document.querySelector(`input[name="${employeeId}_checkIn"]`);
          if (checkInInput && attendance.checkIn) {
            checkInInput.value = attendance.checkIn;
          }
          
          // 퇴근 시간
          const checkOutInput = document.querySelector(`input[name="${employeeId}_checkOut"]`);
          if (checkOutInput && attendance.checkOut) {
            checkOutInput.value = attendance.checkOut;
          }
          
          // 비고
          const noteInput = document.querySelector(`input[name="${employeeId}_note"]`);
          if (noteInput && attendance.note) {
            noteInput.value = attendance.note;
          }
        }
      }
      
      // 성공 메시지 표시
      const resultDiv = document.getElementById('saveResult');
      resultDiv.style.display = 'block';
      resultDiv.className = 'alert alert-info mt-3';
      resultDiv.innerHTML = `
        <i class="fa-solid fa-info-circle me-2"></i>
        ${date} 근태 데이터를 불러왔습니다.
      `;
      
      setTimeout(() => {
        resultDiv.style.display = 'none';
      }, 3000);
      
    } else {
      alert('근태 데이터 조회에 실패했습니다.');
    }
    
  } catch (error) {
    console.error('근태 데이터 조회 오류:', error);
    alert('근태 데이터 조회 중 오류가 발생했습니다.');
  }
}

// 페이지 로드 시 오늘 날짜 데이터 자동 조회
document.addEventListener('DOMContentLoaded', function() {
  loadAttendanceData();
});
</script>

<%- include('footer') %>
