<!--
  파일명: register.ejs
  목적: 회원가입 페이지
  기능:
  - 사용자 정보 입력 (이름, 이메일, 비밀번호)
  - 부서 및 직급 선택
  - 비밀번호 확인
  - 데이터 유효성 검사
  - 로그인 페이지 연결
  - 반응형 폼 디자인
  - 모바일 최적화
-->
<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>회원가입</title>
  <!-- Bootstrap CSS CDN -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <!-- 모바일 최적화 CSS -->
  <link rel="stylesheet" href="/mobile-optimization.css">
  <style>
    body {
      background: linear-gradient(135deg, #f8fafc 0%, #e2eafc 100%);
      min-height: 100vh;
    }
    .register-container {
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 2rem 1rem;
    }
    .register-card {
      max-width: 450px;
      width: 100%;
      margin: auto;
      box-shadow: 0 4px 24px rgba(0,0,0,0.08);
      border-radius: 16px;
      padding: 2.5rem 2rem 2rem 2rem;
      background: #fff;
    }
    .register-title {
      font-weight: 700;
      margin-bottom: 1.5rem;
      text-align: center;
      color: #2d3a4b;
    }
    .form-label {
      font-weight: 500;
    }
    .btn-primary {
      width: 100%;
      font-weight: 600;
      letter-spacing: 1px;
    }
    .register-links {
      margin-top: 1.2rem;
      text-align: center;
    }
    .register-links a {
      color: #4f8cff;
      text-decoration: none;
      margin: 0 0.5rem;
    }
    .register-links a:hover {
      text-decoration: underline;
    }
    .password-field {
      position: relative;
    }
    .password-toggle {
      position: absolute;
      right: 10px;
      top: 50%;
      transform: translateY(-50%);
      background: none;
      border: none;
      color: #6c757d;
      cursor: pointer;
      padding: 5px;
    }
    .password-toggle:hover {
      color: #495057;
    }
    .password-match {
      margin-top: 0.5rem;
      font-size: 0.875rem;
    }
    .password-match.match {
      color: #198754;
    }
    .password-match.no-match {
      color: #dc3545;
    }
    .password-match.pending {
      color: #6c757d;
    }
    .form-text {
      margin-top: 0.5rem;
    }
    .requirement {
      margin-bottom: 0.25rem;
    }
    
    /* 모바일 최적화 */
    @media (max-width: 768px) {
      .register-container {
        padding: 1rem 0.5rem;
      }
      .register-card {
        padding: 2rem 1.5rem 1.5rem 1.5rem;
        border-radius: 12px;
        margin: 0 0.5rem;
      }
      .register-title {
        font-size: 1.5rem;
        margin-bottom: 1.25rem;
      }
      .form-label {
        font-size: 0.9rem;
        margin-bottom: 0.5rem;
      }
      .form-control, .form-select {
        font-size: 0.9rem;
        padding: 0.75rem 0.5rem;
        border-radius: 8px;
      }
      .btn-primary {
        padding: 0.75rem 1rem;
        font-size: 0.9rem;
        border-radius: 8px;
      }
      .password-toggle {
        right: 8px;
        padding: 8px;
      }
      .password-match {
        font-size: 0.8rem;
      }
      .form-text {
        font-size: 0.8rem;
      }
      .requirement {
        font-size: 0.8rem;
        margin-bottom: 0.2rem;
      }
    }
    
    @media (max-width: 576px) {
      .register-container {
        padding: 0.5rem 0.25rem;
      }
      .register-card {
        padding: 1.5rem 1rem 1rem 1rem;
        border-radius: 8px;
        margin: 0 0.25rem;
      }
      .register-title {
        font-size: 1.25rem;
        margin-bottom: 1rem;
      }
      .form-control, .form-select {
        font-size: 0.85rem;
        padding: 0.5rem 0.5rem;
      }
      .btn-primary {
        padding: 0.5rem 0.75rem;
        font-size: 0.85rem;
      }
      .password-toggle {
        right: 6px;
        padding: 6px;
      }
    }
    
    /* 터치 디바이스 최적화 */
    @media (hover: none) and (pointer: coarse) {
      .btn-primary:hover {
        transform: none;
      }
      .btn-primary:active {
        transform: scale(0.95);
      }
      .form-control:focus, .form-select:focus {
        box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
      }
      .btn, .form-control, .form-select {
        min-height: 44px;
      }
    }
  </style>
</head>
<body>
  <!-- 헤더 포함 -->
  <!-- 회원가입 페이지에서는 헤더 제외 -->
  
  <div class="register-container">
    <div class="register-card">
      <h2 class="register-title">
        <i class="fa-solid fa-user-plus me-2"></i>회원가입
      </h2>
      
      <form id="registerForm" action="/auth/register" method="POST">
        <div class="row g-3">
          <!-- 이름 입력 -->
          <div class="col-12">
            <label for="name" class="form-label">
              <i class="fa-solid fa-user me-1"></i>이름
            </label>
            <input type="text" class="form-control" id="name" name="name" required>
          </div>
          
          <!-- 이메일 입력 -->
          <div class="col-12">
            <label for="email" class="form-label">
              <i class="fa-solid fa-envelope me-1"></i>이메일
            </label>
            <input type="email" class="form-control" id="email" name="email" required>
          </div>
          
          <!-- 부서 선택 -->
          <div class="col-12">
            <label for="department" class="form-label">
              <i class="fa-solid fa-building me-1"></i>부서
            </label>
            <select class="form-select" id="department" name="department" required>
              <option value="">부서를 선택하세요</option>
              <option value="인사팀">인사팀</option>
              <option value="개발팀">개발팀</option>
              <option value="마케팅팀">마케팅팀</option>
              <option value="영업팀">영업팀</option>
              <option value="기타">기타</option>
            </select>
          </div>
          
          <!-- 직급 선택 -->
          <div class="col-12">
            <label for="position" class="form-label">
              <i class="fa-solid fa-user-tie me-1"></i>직급
            </label>
            <select class="form-select" id="position" name="position" required>
              <option value="">직급을 선택하세요</option>
              <option value="사원">사원</option>
              <option value="주임">주임</option>
              <option value="대리">대리</option>
              <option value="과장">과장</option>
              <option value="차장">차장</option>
              <option value="부장">부장</option>
              <option value="이사">이사</option>
              <option value="상무">상무</option>
              <option value="전무">전무</option>
              <option value="부사장">부사장</option>
              <option value="사장">사장</option>
            </select>
          </div>
          
          <!-- 비밀번호 입력 -->
          <div class="col-12">
            <label for="password" class="form-label">
              <i class="fa-solid fa-lock me-1"></i>비밀번호
            </label>
            <div class="password-field">
              <input type="password" class="form-control" id="password" name="password" required>
              <button type="button" class="password-toggle" onclick="togglePassword('password')">
                <i class="fa-solid fa-eye"></i>
              </button>
            </div>
            <div class="form-text">
              <strong>비밀번호 요구사항:</strong>
              <div class="requirement" id="length">• 최소 8자 이상</div>
              <div class="requirement" id="uppercase">• 대문자 1개 이상</div>
              <div class="requirement" id="lowercase">• 소문자 1개 이상</div>
              <div class="requirement" id="number">• 숫자 1개 이상</div>
              <div class="requirement" id="special">• 특수문자 1개 이상</div>
            </div>
          </div>
          
          <!-- 비밀번호 확인 -->
          <div class="col-12">
            <label for="confirmPassword" class="form-label">
              <i class="fa-solid fa-lock me-1"></i>비밀번호 확인
            </label>
            <div class="password-field">
              <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
              <button type="button" class="password-toggle" onclick="togglePassword('confirmPassword')">
                <i class="fa-solid fa-eye"></i>
              </button>
            </div>
            <div class="password-match pending" id="passwordMatch">
              비밀번호를 입력해주세요
            </div>
          </div>
          
          <!-- 회원가입 버튼 -->
          <div class="col-12">
            <button type="submit" class="btn btn-primary" id="submitBtn" disabled>
              <i class="fa-solid fa-user-plus me-2"></i>회원가입
            </button>
          </div>
        </div>
      </form>
      
      <!-- 로그인 링크 -->
      <div class="register-links">
        <span>이미 계정이 있으신가요?</span>
        <a href="/auth/login">
          <i class="fa-solid fa-sign-in-alt me-1"></i>로그인
        </a>
      </div>
    </div>
  </div>

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  
  <script>
    // 비밀번호 표시/숨김 토글
    function togglePassword(fieldId) {
      const field = document.getElementById(fieldId);
      const toggle = field.nextElementSibling;
      const icon = toggle.querySelector('i');
      
      if (field.type === 'password') {
        field.type = 'text';
        icon.classList.remove('fa-eye');
        icon.classList.add('fa-eye-slash');
      } else {
        field.type = 'password';
        icon.classList.remove('fa-eye-slash');
        icon.classList.add('fa-eye');
      }
    }
    
    // 비밀번호 요구사항 검사
    function checkPasswordRequirements(password) {
      const requirements = {
        length: password.length >= 8,
        uppercase: /[A-Z]/.test(password),
        lowercase: /[a-z]/.test(password),
        number: /[0-9]/.test(password),
        special: /[!@#$%^&*(),.?":{}|<>]/.test(password)
      };
      
      // 각 요구사항에 대한 시각적 피드백
      Object.keys(requirements).forEach(req => {
        const element = document.getElementById(req);
        if (requirements[req]) {
          element.style.color = '#198754';
          element.innerHTML = `✓ ${element.innerHTML.substring(2)}`;
        } else {
          element.style.color = '#dc3545';
          element.innerHTML = `✗ ${element.innerHTML.substring(2)}`;
        }
      });
      
      return Object.values(requirements).every(Boolean);
    }
    
    // 비밀번호 일치 확인
    function checkPasswordMatch() {
      const password = document.getElementById('password').value;
      const confirmPassword = document.getElementById('confirmPassword').value;
      const matchElement = document.getElementById('passwordMatch');
      
      if (!confirmPassword) {
        matchElement.textContent = '비밀번호를 입력해주세요';
        matchElement.className = 'password-match pending';
        return false;
      } else if (password === confirmPassword) {
        matchElement.textContent = '✓ 비밀번호가 일치합니다';
        matchElement.className = 'password-match match';
        return true;
      } else {
        matchElement.textContent = '✗ 비밀번호가 일치하지 않습니다';
        matchElement.className = 'password-match no-match';
        return false;
      }
    }
    
    // 폼 제출 버튼 활성화/비활성화
    function updateSubmitButton() {
      const password = document.getElementById('password').value;
      const passwordValid = checkPasswordRequirements(password);
      const passwordMatch = checkPasswordMatch();
      const submitBtn = document.getElementById('submitBtn');
      
      submitBtn.disabled = !(passwordValid && passwordMatch);
    }
    
    // 이벤트 리스너 등록
    document.getElementById('password').addEventListener('input', updateSubmitButton);
    document.getElementById('confirmPassword').addEventListener('input', updateSubmitButton);
    
    // 폼 제출 처리
    document.getElementById('registerForm').addEventListener('submit', function(e) {
      e.preventDefault();
      
      const formData = new FormData(this);
      const data = Object.fromEntries(formData);
      
      // 클라이언트 측 유효성 검사
      if (data.password !== data.confirmPassword) {
        alert('비밀번호가 일치하지 않습니다.');
        return;
      }
      
      if (!checkPasswordRequirements(data.password)) {
        alert('비밀번호 요구사항을 충족하지 않습니다.');
        return;
      }
      
      // 서버로 데이터 전송
      fetch('/auth/register', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data)
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert('회원가입이 완료되었습니다!');
          window.location.href = '/auth/login';
        } else {
          alert(data.message || '회원가입 중 오류가 발생했습니다.');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('회원가입 중 오류가 발생했습니다.');
      });
    });
  </script>
</body>
</html> 